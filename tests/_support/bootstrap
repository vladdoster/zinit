#!/usr/bin/env zsh
setopt NO_GLOBAL_RCS NO_GLOBAL_EXPORT NO_RCS NO_ALIASES

# Log functions [[[
function error(){ print -P "%F{red}[ERROR]%f: ${1}" && return 1; }
function info() { print -P "%F{green}[INFO]%f:%F{cyan} ${1} %f"; }
function warn() { print -P "%F{yellow}[WARN]%f: ${1}"; }
# ]]]
# Create Zunit test environment [[[
GIT_REPO=$(git rev-parse --show-toplevel)

_mktemp_cmd='mktemp'
if (( ${+commands[gmktemp]} )); then
    _mktemp_cmd='gmktemp'
fi
TMP_ZUNIT=$(${_mktemp_cmd} --directory --tmpdir="${GIT_REPO}/tests/_support")
if [[ ! -d ${TMP_ZUNIT} ]]; then
    error "zunit temp dir not found"
    exit 1
fi

typeset -g zi_dir="${TMP_ZUNIT}"
typeset -gxUA ZINIT
# DEBUG           'true'
ZINIT+=(
  BIN_DIR         ${zi_dir}/zinit.git
  COMPLETIONS_DIR ${zi_dir}/completions SNIPPETS_DIR ${zi_dir}/snippets
  HOME_DIR        ${zi_dir}             PLUGINS_DIR  ${zi_dir}/plugins
  ZCOMPDUMP_PATH  ${zi_dir}/zcompdump   ZPFX         ${zi_dir}/polaris
  POLARIS         ${zi_dir}/polaris
)
# typeset -gxH ZPFX="$ZINIT[POLARIS]"
# FORK            'vladdoster'        REPO           'zinit-t'
# typeset -gxAUH ZINIT=(${(kv)CONFIG})
git config --global --add advice.detachedHead false
command git diff > ${ZINIT[HOME_DIR]}/unstaged.diff
# info 'creating test env'
git clone \
    --quiet \
    --depth=1 \
    --dissociate \
    --no-hardlinks \
    --reference "${GIT_REPO}" \
    file://${GIT_REPO:A} \
    "${ZINIT[BIN_DIR]}" >/dev/null
if (( $? != 0 )); then
    error "Unable to copy ${GIT_REPO} to ${TMP_ZUNIT}" >&2
    exit 1
fi

if [[ -s $ZINIT[HOME_DIR]/unstaged.diff ]]; then
    (
        git --quiet -C $ZINIT[BIN_DIR] apply $ZINIT[HOME_DIR]/unstaged.diff && \
            chmod g-rwX "${ZINIT[HOME_DIR]}" && \
            zcompile "${ZINIT[BIN_DIR]}/zinit.zsh" >/dev/null
    ) >/dev/null
fi
(( $? != 0 )) && { error "Unable to copy ${GIT_REPO} to ${TMP_ZUNIT}" >&2; exit 1 }

hash -f
builtin hash -d zinit=$zi_dir
builtin hash -d zpfx=$zi_dir/polaris
source $zi_dir/zinit.git/zinit.zsh
(( $? != 0 )) && { error "Unable to source zinit" >&2; exit 1 }
hash -f
builtin hash -d zinit=$zi_dir
builtin hash -d zpfx=$zi_dir/polaris

# ]]]
# Install Annexes [[[
# +zi-log '{m} installing test dependencies'
{
  zinit for \
    depth'1' \
  @zdharma-continuum/zinit-annex-linkman \
    depth'1' \
  @zdharma-continuum/zinit-annex-default-ice \
    ver'feat/logging' \
  @zdharma-continuum/zinit-annex-binary-symlink
} >/dev/null
+zi-log "{m} loaded dependencies"
# ]]]

# vim:ft=zsh:sw=2:sts=2:et:foldmarker=[[[,]]]:foldmethod=marker
